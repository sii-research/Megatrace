# Example values for venus-monitoring
# Copy this file to values.yaml and customize as needed

# Global settings
global:
  namespace: monitoring

# Kube Prometheus Stack configuration
kube-prometheus-stack:
  enabled: true
  
  # Disable default components that we'll manage separately
  prometheus:
    enabled: true
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      additionalScrapeConfigs:
        enabled: true
        name: additional-scrape-configs
        key: prometheus-additional.yaml
  
  grafana:
    enabled: true
    adminPassword: "admin123"
    service:
      type: ClusterIP
      port: 80
  
  alertmanager:
    enabled: true
    alertmanagerSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
  
  # Disable default exporters
  nodeExporter:
    enabled: false
  kubeStateMetrics:
    enabled: false
  prometheusOperator:
    enabled: true

# Node Exporter 配置
nodeExporter:
  enabled: true
  image:
    repository: prom/node-exporter
    tag: v1.7.0
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 9100
  
  resources:
    requests:
      memory: 100Mi
      cpu: 50m
    limits:
      memory: 200Mi
      cpu: 100m

# Kube State Metrics 配置
kubeStateMetrics:
  enabled: true
  image:
    repository: k8s.gcr.io/kube-state-metrics/kube-state-metrics
    tag: v2.9.2
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8080
  
  resources:
    requests:
      memory: 100Mi
      cpu: 50m
    limits:
      memory: 200Mi
      cpu: 100m

# IPMI Exporter 配置
ipmiExporter:
  enabled: true
  image:
    repository: prom/ipmi-exporter
    tag: v1.6.1
    pullPolicy: IfNotPresent
  
  # Init container to install ipmitools
  initContainer:
    enabled: true
    image:
      repository: alpine
      tag: "3.18"
      pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 9290
  
  resources:
    requests:
      memory: 100Mi
      cpu: 50m
    limits:
      memory: 200Mi
      cpu: 100m
  
  ipmi:
    username: "admin"
    password: "admin"
    targets:
      - "10.42.1.201"
      - "10.42.1.202"
      - "10.42.1.203"
    modules:
      - name: "default"
        collectors:
          - "bmc"
          - "chassis"
          - "dcmi"
          - "ipmi"
          - "misc"
          - "sensor"
        overrides:
          - name: "sensor"
            enabled: true

# 额外抓取配置
additionalScrapeConfigs:
  etcd:
    enabled: true

# Prometheus 告警规则配置
prometheusRules:
  gpu:
    enabled: true
  node:
    enabled: true
  k8s:
    enabled: true
  ipmi:
    enabled: true

# ServiceMonitors 配置
serviceMonitors:
  nodeExporter:
    enabled: true
  kubeStateMetrics:
    enabled: true
  nvidiaGpuExporter:
    enabled: true
  harborExporter:
    enabled: true
  postgresExporter:
    enabled: true
  volcanoScheduler:
    enabled: true
  ipmiExporter:
    enabled: true

# Ingress 配置
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: monitoring.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

# 持久化配置
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi

# NVIDIA GPU Exporter 子Chart
nvidia-gpu-exporter:
  enabled: true
  image:
    repository: nvidia/dcgm-exporter
    tag: "3.1.7-3.1.4-ubuntu20.04"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 9400
  
  resources:
    requests:
      memory: 100Mi
      cpu: 50m
    limits:
      memory: 200Mi
      cpu: 100m

# Harbor Exporter 子Chart
harbor-exporter:
  enabled: true
  image:
    repository: prom/harbor-exporter
    tag: v0.1.0
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 9090
  
  resources:
    requests:
      memory: 100Mi
      cpu: 50m
    limits:
      memory: 200Mi
      cpu: 100m

# PostgreSQL Exporter 子Chart
postgres-exporter:
  enabled: true
  image:
    repository: prometheuscommunity/postgres-exporter
    tag: v0.15.0
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 9187
  
  resources:
    requests:
      memory: 100Mi
      cpu: 50m
    limits:
      memory: 200Mi
      cpu: 100m

# Volcano Scheduler 子Chart
volcano-scheduler:
  enabled: true
  image:
    repository: volcano-scheduler
    tag: v1.8.0
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 10251
  
  resources:
    requests:
      memory: 100Mi
      cpu: 50m
    limits:
      memory: 200Mi
      cpu: 100m